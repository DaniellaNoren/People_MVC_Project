{"version":3,"sources":["Components/PeopleTable.js","App.js","reportWebVitals.js","index.js"],"names":["url","window","location","href","CreatePersonForm","state","showWarning","warning","person","FirstName","LastName","CityId","PhoneNr","SocialSecurityNr","LanguageIds","countries","cities","languages","regex","RegExp","this","test","setState","length","props","handleSubmit","a","axios","get","then","r","data","flatMap","c","id","catch","e","console","log","className","onSubmit","ev","preventDefault","checkPerson","for","value","onChange","event","target","type","required","name","defaultValue","parseInt","map","multiple","l","languageName","React","Component","PersonDetails","deletePersonFunction","hideDetails","onClick","city","socialSecurityNr","phoneNr","Person","useState","showDetails","setShowDetails","colspan","firstName","lastName","CSSTransition","in","timeout","classNames","val","Table","people","p","People","showCreateForm","addNewPerson","json","JSON","stringify","post","headers","oldState","removePerson","delete","status","filter","sortPeopleByName","sort","p1","p2","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAMMA,EAAMC,OAAOC,SAASC,KAEtBC,E,4MACFC,MAAQ,CACJC,aAAa,EACbC,QAAS,GACTC,OAAQ,CACJC,UAAW,GACXC,SAAU,GACVC,OAAQ,EACRC,QAAS,GACTC,iBAAkB,GAClBC,YAAa,IAEjBC,UAAW,GACXC,OAAQ,GACRC,UAAW,I,iDAEf,WACI,IAAMC,EAAQ,IAAIC,OAAO,YAEU,KAAhCC,KAAKf,MAAMG,OAAOC,WAAmD,KAA/BW,KAAKf,MAAMG,OAAOE,SAKxDQ,EAAMG,KAAKD,KAAKf,MAAMG,OAAOI,SAC5BQ,KAAKE,SAAS,CAAChB,aAAa,EAAMC,QAAS,wBAG5CW,EAAMG,KAAKD,KAAKf,MAAMG,OAAOK,mBAC5BO,KAAKf,MAAMG,OAAOK,iBAAiBU,OAAS,IAC5CH,KAAKf,MAAMG,OAAOK,iBAAiBU,OAAS,GAE5CH,KAAKE,SAAS,CAAChB,aAAa,EAAMC,QAAS,iBAG/Ca,KAAKE,SAAS,CAAChB,aAAa,EAAOC,QAAS,KAE5Ca,KAAKI,MAAMC,aAAaL,KAAKf,MAAMG,SAjB/BY,KAAKE,SAAS,CAAChB,aAAa,EAAMC,QAAS,+B,sEAoBnD,iCAAAmB,EAAA,sEACUC,IAAMC,IAAN,UAAa5B,EAAb,eACL6B,MAAK,SAAAC,GACF,EAAKR,SAAS,CAAEP,UAAWe,EAAEC,KAAKhB,eACnCc,MAAK,WACJ,EAAKP,SAAS,CAAEN,OAAQ,EAAKX,MAAMU,UAAUiB,SAAQ,SAAAC,GAAC,OAAIA,EAAEjB,eAE/Da,MAAK,WACF,EAAKP,SAAU,CAACd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBG,OAAQ,EAAKN,MAAMW,OAAO,GAAGkB,UAE/EC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXpB,uBAcUT,IAAMC,IAAN,UAAa5B,EAAb,eACD6B,MAAK,SAAAC,GACF,EAAKR,SAAS,CAAEL,UAAWa,EAAEC,KAAKd,eACnCkB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAlBxB,2C,0EAqBA,WAAU,IAAD,OACL,OACD,qBAAKG,UAAU,6CAAf,SAIC,uBAAMC,SAAU,SAAAC,GACVA,EAAGC,iBAAkB,EAAKC,eAC5BJ,UAAU,qBAFd,UAIMnB,KAAKf,MAAMC,YAAc,mBAAGiC,UAAU,yBAAb,SAAuCnB,KAAKf,MAAME,UAAe,KAE5F,sBAAKgC,UAAU,aAAf,UACI,uBAAOK,IAAI,YAAX,wBACA,uBAAOL,UAAU,eAAeL,GAAG,YAAYW,MAAOzB,KAAKf,MAAMG,OAAOC,UACxEqC,SAAU,SAAAC,GACN,EAAKzB,SAAS,CAACd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBC,UAAWsC,EAAMC,OAAOH,WAC1EI,KAAK,OAAOC,UAAQ,OAGxB,sBAAKX,UAAU,aAAf,UACI,uBAAOK,IAAI,WAAX,uBACA,uBAAOL,UAAU,eAAeM,MAAOzB,KAAKf,MAAMG,OAAOE,SAAUoC,SAAU,SAAAC,GACzE,EAAKzB,SAAS,CAAEd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBE,SAAUqC,EAAMC,OAAOH,WAC1EI,KAAK,OAAOf,GAAG,gBAGnB,sBAAKK,UAAU,aAAf,UACI,uBAAOK,IAAI,UAAX,oBACA,uBAAOL,UAAU,eAAeM,MAAOzB,KAAKf,MAAMG,OAAOI,QAASkC,SAAU,SAAAC,GACxE,EAAKzB,SAAS,CAAEd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBI,QAASmC,EAAMC,OAAOH,WACrEI,KAAK,MAAMf,GAAG,UAAUgB,UAAQ,OAGxC,sBAAKX,UAAU,aAAf,UACI,uBAAOK,IAAI,MAAX,kBACA,uBAAOL,UAAU,eAAeM,MAAOzB,KAAKf,MAAMG,OAAOK,iBAAkBiC,SAAU,SAAAC,GACjF,EAAKzB,SAAS,CAAEd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBK,iBAAkBkC,EAAMC,OAAOH,WAClFI,KAAK,SAASf,GAAG,MAAMgB,UAAQ,OAGnC,sBAAKX,UAAU,aAAf,UACI,uBAAOK,IAAI,OAAX,mBACA,wBAAQL,UAAU,eAAeL,GAAG,OAAOiB,KAAK,SAASF,KAAK,OAC9DG,aAAc,EAAGN,SAAU,SAAAC,GACvB,EAAKzB,SAAS,CAACd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBG,OAAQ0C,SAASN,EAAMC,OAAOH,YAC5EK,UAAQ,EAHZ,SAKI9B,KAAKf,MAAMW,OAAOsC,KAAI,SAAArB,GAAC,OAAI,wBAAQY,MAAOZ,EAAEC,GAAjB,SAAmCD,EAAEkB,MAAXlB,EAAEkB,cAK/D,sBAAKZ,UAAU,aAAf,UACI,uBAAOK,IAAI,YAAX,wBACA,wBAAQL,UAAU,eAAegB,UAAU,EAAMJ,KAAK,YAAYF,KAAK,OACvEG,aAAc,GAAIN,SAAU,SAAAC,GACxB,EAAKzB,SAAS,CAACd,OAAO,2BAAK,EAAKH,MAAMG,QAAjB,IAAyBM,YAAY,GAAD,mBAAM,EAAKT,MAAMG,OAAOM,aAAxB,CAAqCuC,SAASN,EAAMC,OAAOH,cACxHX,GAAG,YAAYgB,UAAQ,EAHvB,SAKI9B,KAAKf,MAAMY,UAAUqC,KAAI,SAAAE,GAAC,OAAI,wBAAQX,MAAOW,EAAEtB,GAAjB,SAAiCsB,EAAEC,cAATD,EAAEtB,YAKlE,wBAAQK,UAAU,4BAAlB,6B,GA9HmBmB,IAAMC,WAsI/BC,EAAgB,SAAC,GAAiD,IAAhDpD,EAA+C,EAA/CA,OAAQqD,EAAuC,EAAvCA,qBAAsBC,EAAiB,EAAjBA,YACrD,OACO,sBAAKvB,UAAU,MAAf,UACC,wBAAQwB,QAAS,kBAAMD,GAAY,IAAQvB,UAAU,qCAArD,0BACA,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,sCACA,qCACA,uCACA,6CAGT,gCACI,+BACI,mCAAM/B,EAAOwD,KAAKb,QAClB,6BAAK3C,EAAOyD,mBACZ,6BAAKzD,EAAO0D,UACZ,mCAAK,wBAAQH,QAAS,kBAAMF,EAAqBrD,IACzC+B,UAAU,kBADb,mCAUzB,SAAS4B,EAAT,GAAgD,IAA/B3D,EAA8B,EAA9BA,OAAQqD,EAAsB,EAAtBA,qBACrB,EAAsCH,IAAMU,UAAS,GAArD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OAEI,+BAEI,oBAAIC,QAASF,EAAc,EAAI,EAA/B,SAAmC7D,EAAOgE,YAC1C,oBAAID,QAASF,EAAc,EAAI,EAA/B,SAAmC7D,EAAOiE,WAH9C,OAKI,cAACC,EAAA,EAAD,CACIC,GAAIN,EACJO,QAAS,IACTC,WAAW,SAHf,SAKA,oBAAIN,QAAS,EAAGhC,UAAU,UAA1B,SAEI8B,EACA,cAAC,EAAD,CAAe7D,OAAQA,EAAQqD,qBAAsBA,EACrDC,YAAa,SAAAgB,GAAG,OAAIR,EAAeQ,MAEnC,wBAAQvC,UAAU,kBACdwB,QAAS,kBAAMO,GAAe,IADlC,SAEMD,EAAe,eAAiB,wBAatD,IAAMU,EAAQ,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,OAAQnB,EAA0B,EAA1BA,qBACpB,OACI,wBAAOtB,UAAU,QAAjB,UACI,uBAAOA,UAAU,aAAjB,SACA,+BACI,oBAAIgC,QAAS,EAAb,kBACA,oBAAIA,QAAS,EAAb,2BAGJ,gCACKS,EAAO1B,KAAI,SAAA2B,GAAC,OAAI,cAACd,EAAD,CAAQN,qBAAsBA,EAAiCrD,OAAQyE,GAAdA,EAAE/C,aAKvEgD,E,4MACjB7E,MAAQ,CACJ8E,gBAAgB,EAChBH,OAAQ,I,EAaZI,aAAe,SAAC5E,GAEZ,IAAI6E,EAAOC,KAAKC,UAAU/E,GAE1BmB,IAAM6D,KAAN,UAAcxF,EAAd,WAA4BqF,EAC5B,CAAEI,QAAS,CACP,eAAgB,sBAInB5D,MAAK,SAAAC,GACF,EAAKR,UAAS,SAAAoE,GAAQ,MAAK,CAAEV,OAAO,GAAD,mBAAMU,EAASV,QAAf,CAAuBlD,EAAEC,cAE/DF,MAAK,WACF,EAAKP,SAAS,CAAC6D,gBAAgB,OAElChD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,O,EAIpBuD,aAAe,SAACnF,GACZmB,IAAMiE,OAAN,UAAgB5F,EAAhB,mBAA8BQ,EAAO0B,KACpCL,MAAK,SAAAC,GACc,MAAbA,EAAE+D,QACD,EAAKvE,UAAS,SAAAoE,GAAQ,MAAK,CAAEV,OAAQU,EAASV,OAAOc,QAAO,SAAAb,GAAC,OAAIA,EAAE/C,KAAO1B,EAAO0B,aAGxFC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,O,EAGpB2D,iBAAmB,WACf,EAAKzE,UAAS,SAAAoE,GAAQ,MAAK,CAACV,OAAQU,EAASV,OAAOgB,MAAK,SAACC,EAAIC,GAEtD,OAAGD,EAAGzB,UAAY0B,EAAG1B,WAAmB,EAChC0B,EAAG1B,UAAYyB,EAAGzB,UAAkB,EACrC,U,uDA9CnB,WAAoB,IAAD,OACf7C,IAAMC,IAAN,UAAa5B,EAAb,YACC6B,MAAK,SAAAC,GACF,EAAKR,SAAS,CAAE0D,OAAQlD,EAAEC,KAAKiD,YAElC7C,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,oBA2CpB,WAAS,IAAD,OACL,OACA,gCACK,qBAAKG,UAAU,MAAf,SACI,wBAAQA,UAAU,8CAA8CwB,QAAS3C,KAAK2E,iBAA9E,4BAGJ,cAAC,EAAD,CAAOlC,qBAAsBzC,KAAKuE,aAAcX,OAAQ5D,KAAKf,MAAM2E,SAEnE,wBAAQjB,QAAS,kBAAM,EAAKzC,UAAS,SAAAoE,GAAQ,MAAK,CAACP,gBAAiBO,EAASP,oBAC7E5C,UAAU,kBADV,SAGInB,KAAKf,MAAM8E,eAAiB,OAAS,kBAK1C/D,KAAKf,MAAM8E,eAAiB,cAAC,EAAD,CAAkB1D,aAAcL,KAAKgE,eAAkB,Y,GAzE1D1B,IAAMC,WCjN3BwC,MATf,WAEE,OACE,qBAAK5D,UAAU,MAAf,SACE,cAAC,EAAD,OCKS6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.74a78020.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../index.css';\r\n\r\nconst url = window.location.href;\r\n\r\nclass CreatePersonForm extends React.Component {\r\n    state = {\r\n        showWarning: false,\r\n        warning: '',\r\n        person: {\r\n            FirstName: '',\r\n            LastName: '',\r\n            CityId: 0,\r\n            PhoneNr: '',\r\n            SocialSecurityNr: '',\r\n            LanguageIds: []\r\n        },\r\n        countries: [],\r\n        cities: [],\r\n        languages: []\r\n    }\r\n    checkPerson(){\r\n        const regex = new RegExp('[a-zA-Z]')\r\n\r\n        if(this.state.person.FirstName === '' || this.state.person.LastName === ''){\r\n            this.setState({showWarning: true, warning: 'Name has to be filled in'})\r\n            return;\r\n        }\r\n            \r\n        if(regex.test(this.state.person.PhoneNr)){\r\n            this.setState({showWarning: true, warning: 'Invalid phonenumber'})\r\n            return;\r\n        }     \r\n        if(regex.test(this.state.person.SocialSecurityNr) || \r\n            this.state.person.SocialSecurityNr.length < 10 || \r\n            this.state.person.SocialSecurityNr.length > 12 ){\r\n\r\n            this.setState({showWarning: true, warning: 'Invalid SNN'})\r\n            return;\r\n        }\r\n        this.setState({showWarning: false, warning: ''})\r\n\r\n        this.props.handleSubmit(this.state.person)\r\n        \r\n    }\r\n    async componentDidMount(){\r\n        await axios.get(`${url}/countries`)\r\n        .then(r => {\r\n            this.setState({ countries: r.data.countries });\r\n        }).then(() => {\r\n            this.setState({ cities: this.state.countries.flatMap(c => c.cities)})\r\n        })\r\n        .then(() => {\r\n            this.setState(({person: {...this.state.person, CityId: this.state.cities[0].id}}))\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n\r\n        await axios.get(`${url}/languages`)\r\n            .then(r => {\r\n                this.setState({ languages: r.data.languages})\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n       <div className=\"bg-light d-flex justify-content-center m-2\"> \r\n        \r\n        \r\n\r\n        <form onSubmit={ev => \r\n            { ev.preventDefault(); this.checkPerson();  }}\r\n            className=\"create-person-form\"> \r\n\r\n            { this.state.showWarning ? <p className=\"form-text text-warning\">{this.state.warning}</p> : null } \r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"FirstName\">Firstname:</label>\r\n                <input className=\"form-control\" id=\"FirstName\" value={this.state.person.FirstName} \r\n                onChange={event => {\r\n                    this.setState({person: {...this.state.person, FirstName: event.target.value }})}}\r\n                type=\"text\" required/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"LastName\">Lastname:</label>\r\n                <input className=\"form-control\" value={this.state.person.LastName} onChange={event => {\r\n                    this.setState({ person: {...this.state.person, LastName: event.target.value}})}}\r\n                type=\"text\" id=\"LastName\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"PhoneNr\">Phone:</label>\r\n                <input className=\"form-control\" value={this.state.person.PhoneNr} onChange={event => {\r\n                    this.setState({ person: {...this.state.person, PhoneNr: event.target.value}})}}\r\n                    type=\"tel\" id=\"PhoneNr\" required/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"SSN\">SSN:</label>\r\n                <input className=\"form-control\" value={this.state.person.SocialSecurityNr} onChange={event => {\r\n                    this.setState({ person: {...this.state.person, SocialSecurityNr: event.target.value}})}}\r\n                type=\"number\" id=\"SSN\" required/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"City\">City:</label>\r\n                <select className=\"form-control\" id=\"city\" name=\"cities\" type=\"text\"\r\n                defaultValue={0} onChange={event => { \r\n                    this.setState({person: {...this.state.person, CityId: parseInt(event.target.value)}})}} \r\n                    required>\r\n                    {\r\n                    this.state.cities.map(c => <option value={c.id} key={c.name}>{c.name}</option>  ) \r\n                    }\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"Languages\">Languages:</label>\r\n                <select className=\"form-control\" multiple={true} name=\"languages\" type=\"text\"\r\n                defaultValue={[]} onChange={event => { \r\n                    this.setState({person: {...this.state.person, LanguageIds: [...this.state.person.LanguageIds, parseInt(event.target.value)]}})}} \r\n                id=\"languages\" required>\r\n                {\r\n                    this.state.languages.map(l => <option value={l.id} key={l.id}>{l.languageName}</option>  ) \r\n                }\r\n                </select>\r\n            </div>\r\n            \r\n            <button className=\"mt-3 ml-5 btn btn-primary\">Create</button>\r\n\r\n        </form>\r\n    </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst PersonDetails = ({person, deletePersonFunction, hideDetails}) => {\r\n return (\r\n        <div className=\"row\">\r\n         <button onClick={() => hideDetails(false)} className=\"col-lg-1 mt-3 ml-5 btn btn-primary\">Hide details</button>\r\n         <table className=\"table\">\r\n             <thead>\r\n                 <tr>\r\n                     <th>City</th>\r\n                     <th>SSN</th>\r\n                     <th>Phone</th>\r\n                     <th>Action</th>\r\n                 </tr>\r\n             </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td> {person.city.name}</td>\r\n                    <td>{person.socialSecurityNr}</td>\r\n                    <td>{person.phoneNr}</td> \r\n                    <td> <button onClick={() => deletePersonFunction(person)} \r\n                            className=\"btn btn-warning\">DELETE</button> \r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n         </table>     \r\n        </div>\r\n )\r\n}\r\n\r\nfunction Person({person, deletePersonFunction}){\r\n    const [showDetails, setShowDetails] = React.useState(false); \r\n    \r\n    return (\r\n\r\n        <tr>\r\n           \r\n            <td colspan={showDetails ? 1 : 2}>{person.firstName}</td>\r\n            <td colspan={showDetails ? 1 : 2}>{person.lastName}</td> )\r\n                    :\r\n            <CSSTransition\r\n                in={showDetails}\r\n                timeout={500}\r\n                classNames=\"people\">\r\n\r\n            <td colspan={4} className=\"details\">\r\n                { \r\n                showDetails ?\r\n                <PersonDetails person={person} deletePersonFunction={deletePersonFunction} \r\n                hideDetails={val => setShowDetails(val)}/> \r\n                : \r\n                <button className=\"btn btn-primary\" \r\n                    onClick={() => setShowDetails(true)}>\r\n                    { showDetails ?  'Hide details' : 'Show details' }\r\n                </button>\r\n                }\r\n            </td>\r\n    \r\n            </CSSTransition>\r\n            \r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Table = ({people, deletePersonFunction}) => {\r\n    return (\r\n        <table className=\"table\">\r\n            <thead className=\"thead-dark\">\r\n            <tr>\r\n                <th colspan={2}>Name</th>\r\n                <th colspan={2}>Lastname</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {people.map(p => <Person deletePersonFunction={deletePersonFunction} key={p.id} person={p}/>)}   \r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nexport default class People extends React.Component {\r\n    state = {\r\n        showCreateForm: false,\r\n        people: [\r\n            \r\n        ],\r\n    };\r\n    componentDidMount(){\r\n        axios.get(`${url}/people`)\r\n        .then(r => {\r\n            this.setState({ people: r.data.people });\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n    }\r\n    addNewPerson = (person) => {\r\n\r\n        let json = JSON.stringify(person)\r\n\r\n        axios.post(`${url}/people`, json,\r\n        { headers: {\r\n            'Content-Type': 'application/json'\r\n            } \r\n        }\r\n        )\r\n        .then(r => {\r\n            this.setState(oldState => ({ people: [...oldState.people, r.data]}))\r\n        })\r\n        .then(() => {\r\n            this.setState({showCreateForm: false})\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n      \r\n    }\r\n    removePerson = (person) => {\r\n        axios.delete(`${url}/people/${person.id}`)\r\n        .then(r => {\r\n            if(r.status === 200){\r\n                this.setState(oldState => ({ people: oldState.people.filter(p => p.id !== person.id)}))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n    }\r\n    sortPeopleByName = () => { \r\n        this.setState(oldState => ({people: oldState.people.sort((p1, p2) => \r\n            { \r\n                if(p1.firstName < p2.firstName) return -1; \r\n                else if(p2.firstName < p1.firstName) return 1; \r\n                return 0; })\r\n            }))\r\n    }\r\n    render(){\r\n       return( \r\n       <div>\r\n            <div className=\"row\">\r\n                <button className=\"col-lg-1 mt-3 ml-5 btn btn-primary sort-btn\" onClick={this.sortPeopleByName}>SORT BY NAME</button>\r\n            </div>\r\n\r\n            <Table deletePersonFunction={this.removePerson} people={this.state.people}/>\r\n\r\n            <button onClick={() => this.setState(oldState => ({showCreateForm: !oldState.showCreateForm}))} \r\n            className=\"btn btn-primary\">\r\n            {\r\n                this.state.showCreateForm ? 'Hide' : 'Create person' \r\n            }\r\n           </button>\r\n\r\n            {\r\n           this.state.showCreateForm ? <CreatePersonForm handleSubmit={this.addNewPerson}/> : null\r\n            }\r\n       </div>\r\n       )\r\n    }\r\n}","import './App.css';\nimport PeopleTable from './Components/PeopleTable';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <PeopleTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}