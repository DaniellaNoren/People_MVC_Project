{"version":3,"sources":["Components/PeopleTable.js","App.js","reportWebVitals.js","index.js"],"names":["url","window","location","href","CreatePersonForm","state","person","FirstName","LastName","CityId","PhoneNr","SocialSecurityNr","LanguageIds","countries","cities","languages","a","axios","get","then","r","setState","data","flatMap","c","id","catch","e","console","log","onSubmit","ev","preventDefault","props","handleSubmit","value","this","onChange","event","target","type","required","name","defaultValue","parseInt","map","multiple","l","languageName","React","Component","PersonDetails","deletePersonFunction","city","socialSecurityNr","phoneNr","onClick","Person","showDetails","setShowDetails","val","firstName","lastName","Table","people","p","People","showCreateForm","addNewPerson","json","JSON","stringify","post","headers","oldState","removePerson","delete","status","filter","sortPeopleByName","sort","p1","p2","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb276be6.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst url =  window.location.href;\r\n\r\nclass CreatePersonForm extends React.Component {\r\n    state = {\r\n        person: {\r\n            FirstName: '',\r\n            LastName: '',\r\n            CityId: 0,\r\n            PhoneNr: '',\r\n            SocialSecurityNr: '',\r\n            LanguageIds: []\r\n        },\r\n        countries: [],\r\n        cities: [],\r\n        languages: []\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        await axios.get(`${url}/countries`)\r\n        .then(r => {\r\n\r\n            this.setState({ countries: r.data.countries });\r\n        }).then(() => {\r\n            this.setState({ cities: this.state.countries.flatMap(c => c.cities)})\r\n        })\r\n        .then(() => {\r\n            this.setState(({person: {...this.state.person, CityId: this.state.cities[0].id}}))\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n\r\n        await axios.get(`${url}/languages`)\r\n            .then(r => {\r\n                this.setState({ languages: r.data.languages})\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n    render() {\r\n        return (<form onSubmit={ev => \r\n        { ev.preventDefault(); this.props.handleSubmit(this.state.person) }}> \r\n                <input value={this.state.person.FirstName} \r\n                onChange={event => {\r\n                    this.setState({person: {...this.state.person, FirstName: event.target.value }})}}\r\n                type=\"text\" required/>\r\n                <input value={this.state.person.LastName} onChange={event => {\r\n                    this.setState({ person: {...this.state.person, LastName: event.target.value}})}}\r\n                type=\"text\"/>\r\n                <input value={this.state.person.PhoneNr} onChange={event => {\r\n                    this.setState({ person: {...this.state.person, PhoneNr: event.target.value}})}}\r\n                type=\"text\"/>\r\n                <input value={this.state.person.SocialSecurityNr} onChange={event => {\r\n                    this.setState({ person: {...this.state.person, SocialSecurityNr: event.target.value}})}}\r\n                type=\"text\"/>\r\n                <select id=\"cities\" name=\"cities\" type=\"text\"\r\n                defaultValue={0} onChange={event => { \r\n                    this.setState({person: {...this.state.person, CityId: parseInt(event.target.value)}})}} \r\n                >\r\n                    {\r\n                    this.state.cities.map(c => <option value={c.id} key={c.name}>{c.name}</option>  ) \r\n                    }\r\n                </select>\r\n                <select multiple={true} id=\"languages\" name=\"languages\" type=\"text\"\r\n                defaultValue={[]} onChange={event => { \r\n                    this.setState({person: {...this.state.person, LanguageIds: [...this.state.person.LanguageIds, parseInt(event.target.value)]}})}} \r\n                >\r\n                    {\r\n                    this.state.languages.map(l => <option value={l.id} key={l.id}>{l.languageName}</option>  ) \r\n                    }\r\n                </select>\r\n              \r\n                <button>Create person</button>\r\n        </form>)\r\n    }\r\n}\r\n\r\nconst PersonDetails = ({person, deletePersonFunction}) => {\r\n return (\r\n     <div>\r\n        {person.city.name}\r\n        {person.socialSecurityNr}\r\n        {person.phoneNr}\r\n         <button onClick={() => deletePersonFunction(person)}>DELETE</button>\r\n     \r\n     </div>\r\n )\r\n}\r\n\r\nclass Person extends React.Component {\r\n    state = {\r\n        showDetails: false\r\n    };\r\n    person = this.props.person;\r\n    setShowDetails = (val) => {\r\n        this.setState({showDetails: val})\r\n    }\r\n    render() { return (\r\n        <tr>\r\n            <td>{this.person.firstName}</td>\r\n            <td>{this.person.lastName}</td>\r\n           \r\n            <td>\r\n                <button onClick={() => this.setShowDetails(!this.state.showDetails)}>Show details</button>\r\n            </td>\r\n            \r\n                { this.state.showDetails ?\r\n                    <td>\r\n                        <PersonDetails person={this.person} deletePersonFunction={this.props.deletePersonFunction}/>\r\n                    </td>\r\n                : null\r\n                }\r\n           \r\n        </tr>\r\n    )\r\n}\r\n}\r\n\r\nconst Table = ({people, deletePersonFunction}) => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Lastname</th>\r\n                <th>City</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {people.map(p => <Person deletePersonFunction={deletePersonFunction} key={p.id} person={p}/>)}   \r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nexport default class People extends React.Component {\r\n    state = {\r\n        showCreateForm: false,\r\n        people: [\r\n            \r\n        ],\r\n    };\r\n    componentDidMount(){\r\n        axios.get(`${url}/people`)\r\n        .then(r => {\r\n            this.setState({ people: r.data.people });\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n    }\r\n    addNewPerson = (person) => {\r\n\r\n        let json = JSON.stringify(person)\r\n\r\n        console.log(json);\r\n\r\n        axios.post(`${url}/people`, json,\r\n        { headers: {\r\n            'Content-Type': 'application/json'\r\n            } \r\n        }\r\n        )\r\n        .then(r => {\r\n            this.setState(oldState => ({ people: [...oldState.people, r.data]}))\r\n        })\r\n        .then(() => {\r\n            this.setState({showCreateForm: false})\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n      \r\n    }\r\n    removePerson = (person) => {\r\n        axios.delete(`${url}/people/${person.id}`)\r\n        .then(r => {\r\n            if(r.status === 200){\r\n                this.setState(oldState => ({ people: oldState.people.filter(p => p.id !== person.id)}))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        });\r\n    }\r\n    sortPeopleByName = () => { \r\n        this.setState(oldState => ({people: oldState.people.sort((p1, p2) => \r\n            { \r\n                if(p1.firstName < p2.firstName) return -1; \r\n                else if(p2.firstName < p1.firstName) return 1; \r\n                return 0; })\r\n            }))\r\n    }\r\n    render(){\r\n       return( \r\n       <div>\r\n          \r\n           <button onClick={this.sortPeopleByName}>SORT BY NAME</button>\r\n           <Table deletePersonFunction={this.removePerson} people={this.state.people}/>\r\n       <button onClick={() => this.setState(oldState => ({showCreateForm: !oldState.showCreateForm}))}>Create person</button>\r\n       {\r\n           this.state.showCreateForm ?\r\n                    <CreatePersonForm handleSubmit={this.addNewPerson}/>\r\n                    : null\r\n       }\r\n       </div>)\r\n    }\r\n}","import './App.css';\nimport PeopleTable from './Components/PeopleTable';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <PeopleTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}